#include "fill_tables.h"
#include "global.h"

void FillPartOfTable(Literal& literal, Table<Action>& actionTable)
{
    actionTable.Set(122, literal, new Action(REDUCE, -1, &rule12));
    actionTable.Set(123, literal, new Action(REDUCE, -1, &rule13));
    actionTable.Set(124, literal, new Action(REDUCE, -1, &rule14));
    actionTable.Set(125, literal, new Action(REDUCE, -1, &rule15));
    actionTable.Set(126, literal, new Action(REDUCE, -1, &rule16));
    actionTable.Set(127, literal, new Action(REDUCE, -1, &rule17));
    actionTable.Set(128, literal, new Action(REDUCE, -1, &rule18));
    actionTable.Set(129, literal, new Action(REDUCE, -1, &rule19));
    actionTable.Set(130, literal, new Action(REDUCE, -1, &rule20));
    actionTable.Set(131, literal, new Action(REDUCE, -1, &rule21));
    actionTable.Set(132, literal, new Action(REDUCE, -1, &rule22));
    actionTable.Set(133, literal, new Action(REDUCE, -1, &rule23));
    actionTable.Set(134, literal, new Action(REDUCE, -1, &rule24));
    actionTable.Set(135, literal, new Action(REDUCE, -1, &rule12));
    actionTable.Set(136, literal, new Action(REDUCE, -1, &rule13));
    actionTable.Set(137, literal, new Action(REDUCE, -1, &rule14));
    actionTable.Set(138, literal, new Action(REDUCE, -1, &rule15));
    actionTable.Set(139, literal, new Action(REDUCE, -1, &rule16));
    actionTable.Set(140, literal, new Action(REDUCE, -1, &rule17));
    actionTable.Set(141, literal, new Action(REDUCE, -1, &rule18));
    actionTable.Set(142, literal, new Action(REDUCE, -1, &rule19));
    actionTable.Set(143, literal, new Action(REDUCE, -1, &rule20));
    actionTable.Set(144, literal, new Action(REDUCE, -1, &rule21));
    actionTable.Set(145, literal, new Action(REDUCE, -1, &rule22));
    actionTable.Set(146, literal, new Action(REDUCE, -1, &rule23));
    actionTable.Set(147, literal, new Action(REDUCE, -1, &rule24));
}

void FillTables(Table<Action>& actionTable, Table<int>& goToTable)
{
	int shift_states1[] = {0, 5, 23, 24, 25, 26, 27};
	int shift_states2[] = {7, 33, 35, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89};
	int shift_states3[] = {0, 23, 24, 25, 26, 27};
	int shift_states4[] = {7, 35, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89};
	int shift_states5[] = {29, 76, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121};
	for (int state_num : shift_states1)
	{
		actionTable.Set(state_num, left, new Action(SHIFT, 7, nullptr));
		actionTable.Set(state_num, sin, new Action(SHIFT, 8, nullptr));
		actionTable.Set(state_num, cos, new Action(SHIFT, 9, nullptr));
		actionTable.Set(state_num, ln, new Action(SHIFT, 10, nullptr));
		actionTable.Set(state_num, ctg, new Action(SHIFT, 11, nullptr));
		actionTable.Set(state_num, arcsin, new Action(SHIFT, 12, nullptr));
		actionTable.Set(state_num, arccos, new Action(SHIFT, 13, nullptr));
		actionTable.Set(state_num, arctg, new Action(SHIFT, 14, nullptr));
		actionTable.Set(state_num, arcctg, new Action(SHIFT, 15, nullptr));
		actionTable.Set(state_num, sh, new Action(SHIFT, 16, nullptr));
		actionTable.Set(state_num, ch, new Action(SHIFT, 17, nullptr));
		actionTable.Set(state_num, exp, new Action(SHIFT, 18, nullptr));
		actionTable.Set(state_num, spare, new Action(SHIFT, 19, nullptr));
		actionTable.Set(state_num, number, new Action(SHIFT, 20, nullptr));
		actionTable.Set(state_num, x, new Action(SHIFT, 21, nullptr));
		actionTable.Set(state_num, tg, new Action(SHIFT, 22, nullptr));

		goToTable.Set(state_num, left, new int(7));
		goToTable.Set(state_num, sin, new int(8));
		goToTable.Set(state_num, cos, new int(9));
		goToTable.Set(state_num, ln, new int(10));
		goToTable.Set(state_num, ctg, new int(11));
		goToTable.Set(state_num, arcsin, new int(12));
		goToTable.Set(state_num, arccos, new int(13));
		goToTable.Set(state_num, arctg, new int(14));
		goToTable.Set(state_num, arcctg, new int(15));
		goToTable.Set(state_num, sh, new int(16));
		goToTable.Set(state_num, ch, new int(17));
		goToTable.Set(state_num, exp, new int(18));
		goToTable.Set(state_num, spare, new int(19));
		goToTable.Set(state_num, number, new int(20));
		goToTable.Set(state_num, x, new int(21));
		goToTable.Set(state_num, tg, new int(22));
	}
	for (int state_num : shift_states2)
	{
		actionTable.Set(state_num, left, new Action(SHIFT, 35, nullptr));
		actionTable.Set(state_num, sin, new Action(SHIFT, 36, nullptr));
		actionTable.Set(state_num, cos, new Action(SHIFT, 37, nullptr));
		actionTable.Set(state_num, ln, new Action(SHIFT, 38, nullptr));
		actionTable.Set(state_num, ctg, new Action(SHIFT, 39, nullptr));
		actionTable.Set(state_num, arcsin, new Action(SHIFT, 40, nullptr));
		actionTable.Set(state_num, arccos, new Action(SHIFT, 41, nullptr));
		actionTable.Set(state_num, arctg, new Action(SHIFT, 42, nullptr));
		actionTable.Set(state_num, arcctg, new Action(SHIFT, 43, nullptr));
		actionTable.Set(state_num, sh, new Action(SHIFT, 44, nullptr));
		actionTable.Set(state_num, ch, new Action(SHIFT, 45, nullptr));
		actionTable.Set(state_num, exp, new Action(SHIFT, 46, nullptr));
		actionTable.Set(state_num, spare, new Action(SHIFT, 47, nullptr));
		actionTable.Set(state_num, number, new Action(SHIFT, 48, nullptr));
		actionTable.Set(state_num, x, new Action(SHIFT, 49, nullptr));
		actionTable.Set(state_num, tg, new Action(SHIFT, 50, nullptr));

		goToTable.Set(state_num, left, new int(35));
		goToTable.Set(state_num, sin, new int(36));
		goToTable.Set(state_num, cos, new int(37));
		goToTable.Set(state_num, ln, new int(38));
		goToTable.Set(state_num, ctg, new int(39));
		goToTable.Set(state_num, arcsin, new int(40));
		goToTable.Set(state_num, arccos, new int(41));
		goToTable.Set(state_num, arctg, new int(42));
		goToTable.Set(state_num, arcctg, new int(43));
		goToTable.Set(state_num, sh, new int(44));
		goToTable.Set(state_num, ch, new int(45));
		goToTable.Set(state_num, exp, new int(46));
		goToTable.Set(state_num, spare, new int(47));
		goToTable.Set(state_num, number, new int(48));
		goToTable.Set(state_num, x, new int(49));
		goToTable.Set(state_num, tg, new int(50));
	}
	for (int state_num : shift_states3)
	{
		actionTable.Set(state_num, minus, new Action(SHIFT, 5, nullptr));
		goToTable.Set(state_num, minus, new int(5));
	}
	for (int state_num : shift_states4)
	{
		actionTable.Set(state_num, minus, new Action(SHIFT, 33, nullptr));
		goToTable.Set(state_num, minus, new int(33));
	}
	for (int state_num : shift_states5)
	{
		actionTable.Set(state_num, minus, new Action(SHIFT, 71, nullptr));
		goToTable.Set(state_num, minus, new int(71));
	}
	actionTable.Set(1, minus, new Action(SHIFT, 24, nullptr));
	goToTable.Set(1, minus, new int(24));
	for (int i = 0; i < 12; ++i)
	{
		actionTable.Set(8 + i, left, new Action(SHIFT, 51 + i, nullptr));
		actionTable.Set(36 + i, left, new Action(SHIFT, 77 + i, nullptr));
		goToTable.Set(8 + i, left, new int(51 + i));
		goToTable.Set(36 + i, left, new int(77 + i));
	}
	actionTable.Set(22, left, new Action(SHIFT, 63, nullptr));
	goToTable.Set(22, left, new int(63));
	actionTable.Set(50, left, new Action(SHIFT, 89, nullptr));
	goToTable.Set(50, left, new int(89));
	actionTable.Set(1, plus, new Action(SHIFT, 23, nullptr));
	goToTable.Set(1, plus, new int(23));
	actionTable.Set(29, plus, new Action(SHIFT, 70, nullptr));
	goToTable.Set(29, plus, new int(70));
	actionTable.Set(76, plus, new Action(SHIFT, 70, nullptr));
	goToTable.Set(76, plus, new int(70));
	for (int i = 0; i < 13; ++i)
	{
		actionTable.Set(90 + i, plus, new Action(SHIFT, 70, nullptr));
		goToTable.Set(90 + i, plus, new int(70));
		actionTable.Set(90 + i, right, new Action(SHIFT, 122 + i, nullptr));
		goToTable.Set(90 + i, right, new int(122 + i));
		actionTable.Set(109 + i, plus, new Action(SHIFT, 70, nullptr));
		goToTable.Set(109 + i, plus, new int(70));
		actionTable.Set(109 + i, right, new Action(SHIFT, 135 + i, nullptr));
		goToTable.Set(109 + i, right, new int(135 + i));
	}
	actionTable.Set(29, right, new Action(SHIFT, 69, nullptr));
	actionTable.Set(76, right, new Action(SHIFT, 108, nullptr));
	goToTable.Set(29, right, new int(69));
	goToTable.Set(76, right, new int(108));
	actionTable.Set(2, mul, new Action(SHIFT, 25, nullptr));
	actionTable.Set(30, mul, new Action(SHIFT, 72, nullptr));
	actionTable.Set(64, mul, new Action(SHIFT, 25, nullptr));
	actionTable.Set(65, mul, new Action(SHIFT, 25, nullptr));
	actionTable.Set(103, mul, new Action(SHIFT, 72, nullptr));
	actionTable.Set(104, mul, new Action(SHIFT, 72, nullptr));
	goToTable.Set(2, mul, new int(25));
	goToTable.Set(30, mul, new int(72));
	goToTable.Set(64, mul, new int(25));
	goToTable.Set(65, mul, new int(25));
	goToTable.Set(103, mul, new int(72));
	goToTable.Set(104, mul, new int(72));
	actionTable.Set(2, divis, new Action(SHIFT, 26, nullptr));
	actionTable.Set(30, divis, new Action(SHIFT, 73, nullptr));
	actionTable.Set(64, divis, new Action(SHIFT, 26, nullptr));
	actionTable.Set(65, divis, new Action(SHIFT, 26, nullptr));
	actionTable.Set(103, divis, new Action(SHIFT, 73, nullptr));
	actionTable.Set(104, divis, new Action(SHIFT, 73, nullptr));
	goToTable.Set(2, divis, new int(26));
	goToTable.Set(30, divis, new int(73));
	goToTable.Set(64, divis, new int(26));
	goToTable.Set(65, divis, new int(26));
	goToTable.Set(103, divis, new int(73));
	goToTable.Set(104, divis, new int(73));
	actionTable.Set(3, deg, new Action(SHIFT, 27, nullptr));
	actionTable.Set(31, deg, new Action(SHIFT, 74, nullptr));
	actionTable.Set(66, deg, new Action(SHIFT, 27, nullptr));
	actionTable.Set(67, deg, new Action(SHIFT, 27, nullptr));
	actionTable.Set(105, deg, new Action(SHIFT, 74, nullptr));
	actionTable.Set(106, deg, new Action(SHIFT, 74, nullptr));
	goToTable.Set(3, deg, new int(27));
	goToTable.Set(31, deg, new int(74));
	goToTable.Set(66, deg, new int(27));
	goToTable.Set(67, deg, new int(27));
	goToTable.Set(105, deg, new int(74));
	goToTable.Set(106, deg, new int(74));	

	actionTable.Set(1, end, new Action(ACCEPT, -1, nullptr));

	actionTable.Set(2, minus, new Action(REDUCE, -1, &rule3));
	actionTable.Set(2, end, new Action(REDUCE, -1, &rule3));
	actionTable.Set(2, plus, new Action(REDUCE, -1, &rule3));
	actionTable.Set(3, minus, new Action(REDUCE, -1, &rule6));
	actionTable.Set(3, end, new Action(REDUCE, -1, &rule6));
	actionTable.Set(3, plus, new Action(REDUCE, -1, &rule6));
	actionTable.Set(3, mul, new Action(REDUCE, -1, &rule6));
	actionTable.Set(3, divis, new Action(REDUCE, -1, &rule6));
	actionTable.Set(4, minus, new Action(REDUCE, -1, &rule8));
	actionTable.Set(4, end, new Action(REDUCE, -1, &rule8));
	actionTable.Set(4, plus, new Action(REDUCE, -1, &rule8));
	actionTable.Set(4, mul, new Action(REDUCE, -1, &rule8));
	actionTable.Set(4, divis, new Action(REDUCE, -1, &rule8));
	actionTable.Set(4, deg, new Action(REDUCE, -1, &rule8));
	actionTable.Set(6, minus, new Action(REDUCE, -1, &rule10));
	actionTable.Set(6, end, new Action(REDUCE, -1, &rule10));
	actionTable.Set(6, plus, new Action(REDUCE, -1, &rule10));
	actionTable.Set(6, mul, new Action(REDUCE, -1, &rule10));
	actionTable.Set(6, divis, new Action(REDUCE, -1, &rule10));
	actionTable.Set(6, deg, new Action(REDUCE, -1, &rule10));
	actionTable.Set(20, minus, new Action(REDUCE, -1, &rule25));
	actionTable.Set(20, end, new Action(REDUCE, -1, &rule25));
	actionTable.Set(20, plus, new Action(REDUCE, -1, &rule25));
	actionTable.Set(20, mul, new Action(REDUCE, -1, &rule25));
	actionTable.Set(20, divis, new Action(REDUCE, -1, &rule25));
	actionTable.Set(20, deg, new Action(REDUCE, -1, &rule25));
	actionTable.Set(21, minus, new Action(REDUCE, -1, &rule26));
	actionTable.Set(21, end, new Action(REDUCE, -1, &rule26));
	actionTable.Set(21, plus, new Action(REDUCE, -1, &rule26));
	actionTable.Set(21, mul, new Action(REDUCE, -1, &rule26));
	actionTable.Set(21, divis, new Action(REDUCE, -1, &rule26));
	actionTable.Set(21, deg, new Action(REDUCE, -1, &rule26));
	actionTable.Set(28, minus, new Action(REDUCE, -1, &rule9));
	actionTable.Set(28, end, new Action(REDUCE, -1, &rule9));
	actionTable.Set(28, plus, new Action(REDUCE, -1, &rule9));
	actionTable.Set(28, mul, new Action(REDUCE, -1, &rule9));
	actionTable.Set(28, divis, new Action(REDUCE, -1, &rule9));
	actionTable.Set(28, deg, new Action(REDUCE, -1, &rule9));
	actionTable.Set(32, minus, new Action(REDUCE, -1, &rule8));
	actionTable.Set(32, right, new Action(REDUCE, -1, &rule8));
	actionTable.Set(32, plus, new Action(REDUCE, -1, &rule8));
	actionTable.Set(32, mul, new Action(REDUCE, -1, &rule8));
	actionTable.Set(32, divis, new Action(REDUCE, -1, &rule8));
	actionTable.Set(32, deg, new Action(REDUCE, -1, &rule8));
	actionTable.Set(34, minus, new Action(REDUCE, -1, &rule10));
	actionTable.Set(34, right, new Action(REDUCE, -1, &rule10));
	actionTable.Set(34, plus, new Action(REDUCE, -1, &rule10));
	actionTable.Set(34, mul, new Action(REDUCE, -1, &rule10));
	actionTable.Set(34, divis, new Action(REDUCE, -1, &rule10));
	actionTable.Set(34, deg, new Action(REDUCE, -1, &rule10));
	actionTable.Set(30, minus, new Action(REDUCE, -1, &rule3));
	actionTable.Set(30, right, new Action(REDUCE, -1, &rule3));
	actionTable.Set(30, plus, new Action(REDUCE, -1, &rule3));
	actionTable.Set(31, minus, new Action(REDUCE, -1, &rule6));
	actionTable.Set(31, right, new Action(REDUCE, -1, &rule6));
	actionTable.Set(31, plus, new Action(REDUCE, -1, &rule6));
	actionTable.Set(31, mul, new Action(REDUCE, -1, &rule6));
	actionTable.Set(31, divis, new Action(REDUCE, -1, &rule6));
	actionTable.Set(48, minus, new Action(REDUCE, -1, &rule25));
	actionTable.Set(48, right, new Action(REDUCE, -1, &rule25));
	actionTable.Set(48, plus, new Action(REDUCE, -1, &rule25));
	actionTable.Set(48, mul, new Action(REDUCE, -1, &rule25));
	actionTable.Set(48, divis, new Action(REDUCE, -1, &rule25));
	actionTable.Set(48, deg, new Action(REDUCE, -1, &rule25));
	actionTable.Set(49, minus, new Action(REDUCE, -1, &rule26));
	actionTable.Set(49, right, new Action(REDUCE, -1, &rule26));
	actionTable.Set(49, plus, new Action(REDUCE, -1, &rule26));
	actionTable.Set(49, mul, new Action(REDUCE, -1, &rule26));
	actionTable.Set(49, divis, new Action(REDUCE, -1, &rule26));
	actionTable.Set(49, deg, new Action(REDUCE, -1, &rule26));
	actionTable.Set(75, minus, new Action(REDUCE, -1, &rule9));
	actionTable.Set(75, right, new Action(REDUCE, -1, &rule9));
	actionTable.Set(75, plus, new Action(REDUCE, -1, &rule9));
	actionTable.Set(75, mul, new Action(REDUCE, -1, &rule9));
	actionTable.Set(75, divis, new Action(REDUCE, -1, &rule9));
	actionTable.Set(75, deg, new Action(REDUCE, -1, &rule9));
	actionTable.Set(64, minus, new Action(REDUCE, -1, &rule1));
	actionTable.Set(64, end, new Action(REDUCE, -1, &rule1));
	actionTable.Set(64, plus, new Action(REDUCE, -1, &rule1));
	actionTable.Set(65, minus, new Action(REDUCE, -1, &rule2));
	actionTable.Set(65, end, new Action(REDUCE, -1, &rule2));
	actionTable.Set(65, plus, new Action(REDUCE, -1, &rule2));
	actionTable.Set(66, minus, new Action(REDUCE, -1, &rule4));
	actionTable.Set(66, end, new Action(REDUCE, -1, &rule4));
	actionTable.Set(66, plus, new Action(REDUCE, -1, &rule4));
	actionTable.Set(66, mul, new Action(REDUCE, -1, &rule4));
	actionTable.Set(66, divis, new Action(REDUCE, -1, &rule4));
	actionTable.Set(67, minus, new Action(REDUCE, -1, &rule5));
	actionTable.Set(67, end, new Action(REDUCE, -1, &rule5));
	actionTable.Set(67, plus, new Action(REDUCE, -1, &rule5));
	actionTable.Set(67, mul, new Action(REDUCE, -1, &rule5));
	actionTable.Set(67, divis, new Action(REDUCE, -1, &rule5));
	actionTable.Set(68, minus, new Action(REDUCE, -1, &rule7));
	actionTable.Set(68, end, new Action(REDUCE, -1, &rule7));
	actionTable.Set(68, plus, new Action(REDUCE, -1, &rule7));
	actionTable.Set(68, mul, new Action(REDUCE, -1, &rule7));
	actionTable.Set(68, divis, new Action(REDUCE, -1, &rule7));
	actionTable.Set(68, deg, new Action(REDUCE, -1, &rule7));
	actionTable.Set(69, minus, new Action(REDUCE, -1, &rule11));
	actionTable.Set(69, end, new Action(REDUCE, -1, &rule11));
	actionTable.Set(69, plus, new Action(REDUCE, -1, &rule11));
	actionTable.Set(69, mul, new Action(REDUCE, -1, &rule11));
	actionTable.Set(69, divis, new Action(REDUCE, -1, &rule11));
	actionTable.Set(69, deg, new Action(REDUCE, -1, &rule11));
	actionTable.Set(103, minus, new Action(REDUCE, -1, &rule1));
	actionTable.Set(103, right, new Action(REDUCE, -1, &rule1));
	actionTable.Set(103, plus, new Action(REDUCE, -1, &rule1));
	actionTable.Set(104, minus, new Action(REDUCE, -1, &rule2));
	actionTable.Set(104, right, new Action(REDUCE, -1, &rule2));
	actionTable.Set(104, plus, new Action(REDUCE, -1, &rule2));
	actionTable.Set(105, minus, new Action(REDUCE, -1, &rule4));
	actionTable.Set(105, right, new Action(REDUCE, -1, &rule4));
	actionTable.Set(105, plus, new Action(REDUCE, -1, &rule4));
	actionTable.Set(105, mul, new Action(REDUCE, -1, &rule4));
	actionTable.Set(105, divis, new Action(REDUCE, -1, &rule4));
	actionTable.Set(106, minus, new Action(REDUCE, -1, &rule5));
	actionTable.Set(106, right, new Action(REDUCE, -1, &rule5));
	actionTable.Set(106, plus, new Action(REDUCE, -1, &rule5));
	actionTable.Set(106, mul, new Action(REDUCE, -1, &rule5));
	actionTable.Set(106, divis, new Action(REDUCE, -1, &rule5));
	actionTable.Set(107, minus, new Action(REDUCE, -1, &rule7));
	actionTable.Set(107, right, new Action(REDUCE, -1, &rule7));
	actionTable.Set(107, plus, new Action(REDUCE, -1, &rule7));
	actionTable.Set(107, mul, new Action(REDUCE, -1, &rule7));
	actionTable.Set(107, divis, new Action(REDUCE, -1, &rule7));
	actionTable.Set(107, deg, new Action(REDUCE, -1, &rule7));
	actionTable.Set(108, minus, new Action(REDUCE, -1, &rule11));
	actionTable.Set(108, right, new Action(REDUCE, -1, &rule11));
	actionTable.Set(108, plus, new Action(REDUCE, -1, &rule11));
	actionTable.Set(108, mul, new Action(REDUCE, -1, &rule11));
	actionTable.Set(108, divis, new Action(REDUCE, -1, &rule11));
	actionTable.Set(108, deg, new Action(REDUCE, -1, &rule11));
	FillPartOfTable(minus, actionTable);
	FillPartOfTable(plus, actionTable);
	FillPartOfTable(mul, actionTable);
	FillPartOfTable(divis, actionTable);
	FillPartOfTable(deg, actionTable);
	
	actionTable.Set(122, end, new Action(REDUCE, -1, &rule12));
	actionTable.Set(123, end, new Action(REDUCE, -1, &rule13));
	actionTable.Set(124, end, new Action(REDUCE, -1, &rule14));
	actionTable.Set(125, end, new Action(REDUCE, -1, &rule15));
	actionTable.Set(126, end, new Action(REDUCE, -1, &rule16));
	actionTable.Set(127, end, new Action(REDUCE, -1, &rule17));
	actionTable.Set(128, end, new Action(REDUCE, -1, &rule18));
	actionTable.Set(129, end, new Action(REDUCE, -1, &rule19));
	actionTable.Set(130, end, new Action(REDUCE, -1, &rule20));
	actionTable.Set(131, end, new Action(REDUCE, -1, &rule21));
	actionTable.Set(132, end, new Action(REDUCE, -1, &rule22));
	actionTable.Set(133, end, new Action(REDUCE, -1, &rule23));
	actionTable.Set(134, end, new Action(REDUCE, -1, &rule24));
	actionTable.Set(135, right, new Action(REDUCE, -1, &rule12));
	actionTable.Set(136, right, new Action(REDUCE, -1, &rule13));
	actionTable.Set(137, right, new Action(REDUCE, -1, &rule14));
	actionTable.Set(138, right, new Action(REDUCE, -1, &rule15));
	actionTable.Set(139, right, new Action(REDUCE, -1, &rule16));
	actionTable.Set(140, right, new Action(REDUCE, -1, &rule17));
	actionTable.Set(141, right, new Action(REDUCE, -1, &rule18));
	actionTable.Set(142, right, new Action(REDUCE, -1, &rule19));
	actionTable.Set(143, right, new Action(REDUCE, -1, &rule20));
	actionTable.Set(144, right, new Action(REDUCE, -1, &rule21));
	actionTable.Set(145, right, new Action(REDUCE, -1, &rule22));
	actionTable.Set(146, right, new Action(REDUCE, -1, &rule23));
	actionTable.Set(147, right, new Action(REDUCE, -1, &rule24));

	goToTable.Set(0, E, new int(1));
	goToTable.Set(0, T, new int(2));
	goToTable.Set(0, F, new int(3));
	goToTable.Set(0, K, new int(4));
	goToTable.Set(0, G, new int(6));
	goToTable.Set(5, G, new int(28));
	goToTable.Set(7, E, new int(29));
	goToTable.Set(7, T, new int(30));
	goToTable.Set(7, F, new int(31));
	goToTable.Set(7, K, new int(32));
	goToTable.Set(7, G, new int(34));
	goToTable.Set(23, T, new int(64));
	goToTable.Set(23, F, new int(3));
	goToTable.Set(23, K, new int(4));
	goToTable.Set(23, G, new int(6));
	goToTable.Set(24, T, new int(65));
	goToTable.Set(24, F, new int(3));
	goToTable.Set(24, K, new int(4));
	goToTable.Set(24, G, new int(6));
	goToTable.Set(25, F, new int(66));
	goToTable.Set(25, K, new int(4));
	goToTable.Set(25, G, new int(6));
	goToTable.Set(26, F, new int(67));
	goToTable.Set(26, K, new int(4));
	goToTable.Set(26, G, new int(6));
	goToTable.Set(27, K, new int(68));
	goToTable.Set(27, G, new int(6));
	goToTable.Set(33, G, new int(75));
	goToTable.Set(35, E, new int(76));
	goToTable.Set(35, T, new int(30));
	goToTable.Set(35, F, new int(31));
	goToTable.Set(35, K, new int(32));
	goToTable.Set(35, G, new int(34));
	for (int i = 0; i < 13; ++i)
	{
		goToTable.Set(51 + i, E, new int(90 + i));
		goToTable.Set(51 + i, T, new int(30));
		goToTable.Set(51 + i, F, new int(31));
		goToTable.Set(51 + i, K, new int(32));
		goToTable.Set(51 + i, G, new int(34));
		goToTable.Set(77 + i, E, new int(109 + i));
		goToTable.Set(77 + i, T, new int(30));
		goToTable.Set(77 + i, F, new int(31));
		goToTable.Set(77 + i, K, new int(32));
		goToTable.Set(77 + i, G, new int(34));
	}
	goToTable.Set(70, T, new int(103));
	goToTable.Set(70, F, new int(31));
	goToTable.Set(70, K, new int(32));
	goToTable.Set(70, G, new int(34));
	goToTable.Set(71, T, new int(104));
	goToTable.Set(71, F, new int(31));
	goToTable.Set(71, K, new int(32));
	goToTable.Set(71, G, new int(34));
	goToTable.Set(72, F, new int(105));
	goToTable.Set(72, K, new int(32));
	goToTable.Set(72, G, new int(34));
	goToTable.Set(73, F, new int(106));
	goToTable.Set(73, K, new int(32));
	goToTable.Set(73, G, new int(34));
	goToTable.Set(74, K, new int(107));
	goToTable.Set(74, G, new int(34));
}
